package org.evoleq.exposedx.migration

import org.gradle.kotlin.dsl.support.uppercaseFirstChar
import java.io.File
import java.util.*

fun generateMigration(id: Long, packageName: String): String =
    """
        |package $packageName
        |
        |import org.evoleq.exposedx.migrations.Migration
        |import org.jetbrains.exposed.sql.Database
        |import org.jetbrains.exposed.sql.Transaction
        |
        |/**
        | * Autogenerated [Migration],
        | * generated by the evoleq/exposedx migration gradle-plugin.
        | * Alter with care!
        | *
        | * Generated at ${Date(id)}
        | *
        | * Description: ...
        | */
        |class Migration$id(
        |    override val database: Database
        |) : Migration {
        |
        |    /**
        |     * Id of the migration, do not change!
        |     */
        |    override val id: Long
        |        get() = $id
        |
        |    /**
        |     * Upwards migration
        |     */
        |    override suspend fun Transaction.up() {
        |        TODO("Not yet implemented")
        |    }
        |
        |    /**
        |     * Downwards migration (inverse to the upward migration).
        |     */
        |    override suspend fun Database.down() {
        |        TODO("Not yet implemented")
        |    }
        |}
        |
        """.trimMargin()

fun File.buildMigrationList(packageName: String, module: String = ""): String {
    val migrations = listFiles {
            file -> with(file.name) {
                startsWith("migration-") &&
                endsWith(".kt")
        }
    }?.map{
        it.name.substring(10).dropLast(3)
    }?.map{
        it.toLong()
    }?.sortedBy{
        it
    }?.map{
        "        { Migration${it}(this) }"
    }?: listOf()
    
    val migrationListName = when(module) {
        "" -> "migrations"
        else -> module + "Migrations"
    }.split("/")
     .mapIndexed{index, item -> if (index == 0) {item} else {item.uppercaseFirstChar()} }
     .joinToString("")
    
    return """
    |package $packageName
    |
    |import org.evoleq.exposedx.migrations.Migration
    |import org.jetbrains.exposed.sql.Database
    |
    |/**
    | * Autogenerated [List] of [Migration]s. Alter with care!
    | */
    |val ${migrationListName}: ArrayList<Database.()-> Migration> by lazy{
    |    arrayListOf<Database.()-> Migration>(
    |${migrations.joinToString(",\n") { it }}
    |    )
    |}
    |
    """.trimMargin()
}

package org.solyton.solawi.bid.module.application.migrations

import org.evoleq.exposedx.migrations.Migration
import org.evoleq.uuid.UUID_ZERO
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.Transaction
import org.jetbrains.exposed.sql.and
import org.jetbrains.exposed.sql.insert
import org.solyton.solawi.bid.module.application.repository.registerForApplication
import org.solyton.solawi.bid.module.application.repository.registerForModule
import org.solyton.solawi.bid.module.application.schema.ApplicationEntity
import org.solyton.solawi.bid.module.application.schema.ApplicationsTable
import org.solyton.solawi.bid.module.application.schema.ModuleContextsTable
import org.solyton.solawi.bid.module.application.schema.ModuleEntity
import org.solyton.solawi.bid.module.application.schema.ModulesTable
import org.solyton.solawi.bid.module.permission.schema.ContextEntity
import org.solyton.solawi.bid.module.permission.schema.RightEntity
import org.solyton.solawi.bid.module.permission.schema.RoleEntity
import org.solyton.solawi.bid.module.permission.schema.UserRoleContext
import org.solyton.solawi.bid.module.permission.schema.repository.grant
import org.solyton.solawi.bid.module.permission.schema.repository.of
import org.solyton.solawi.bid.module.user.schema.UserEntity
import org.solyton.solawi.bid.module.user.schema.UsersTable

/**
 * Autogenerated [Migration],
 * generated by the evoleq/exposedx migration gradle-plugin.
 * Alter with care!
 *
 * Generated at Thu Aug 28 23:11:52 CEST 2025
 *
 * Description: ...
 */
class Migration1756415512610(
    override val database: Database
) : Migration {

    /**
     * Id of the migration, do not change!
     */
    override val id: Long
        get() = 1756415512610

    /**
     * Upwards migration
     */
    override suspend fun Transaction.up() {

        val applicationUserManagementContext = ContextEntity.new {
            name = "APPLICATION_USER_MANAGEMENT"
            createdBy = UUID_ZERO
        }

        val applicationAccessManager = RoleEntity.new {
            name = "APPLICATION_ACCESS_MANAGER"
            description = "Assign / Unassign apps and modules to users"
            createdBy = UUID_ZERO
        }

        val manageAccessToApps = RightEntity.new {
            name = "MANAGE_ACCESS_TO_APPS"
            description = "DESCRIPTION"
            createdBy = UUID_ZERO
        }

        (applicationAccessManager of applicationUserManagementContext).grant(
            manageAccessToApps
        )

        val developer = UserEntity.find { UsersTable.username eq "developer@solyton.org" }.first()

        UserRoleContext.insert {
            it[userId] = developer.id.value
            it[roleId] = applicationAccessManager.id.value
            it[contextId] = applicationUserManagementContext.id.value
        }

        val applicationManagementApplication = ApplicationEntity.find { ApplicationsTable.name eq "APPLICATION_MANAGEMENT" }.first()
        val applicationUserManagementModule = ModuleEntity.find {
            ModulesTable.name eq "APPLICATION_USER_MANAGEMENT" and
            (ModulesTable.applicationId eq applicationManagementApplication.id)
        }.first()

        ModuleContextsTable.insert {
            it[moduleId] = applicationUserManagementModule.id
            it[contextId] = applicationUserManagementContext.id
        }

        val auctionApplication = ApplicationEntity.find { ApplicationsTable.name eq "AUCTIONS" }.first()
        val auctionManagementModule = ModuleEntity.find { ModulesTable.name eq "AUCTION_MANAGEMENT" }.first()
        (0..4).forEach {
            val userId = UserEntity.find { UsersTable.username eq "dummy_$it@solyton.org" }.first().id
            registerForApplication(userId.value, auctionApplication.id.value)
            registerForModule(userId.value, auctionManagementModule.id.value)
        }
    }

    /**
     * Downwards migration (inverse to the upward migration).
     */
    override suspend fun Database.down() {
        TODO("Not yet implemented")
    }
}

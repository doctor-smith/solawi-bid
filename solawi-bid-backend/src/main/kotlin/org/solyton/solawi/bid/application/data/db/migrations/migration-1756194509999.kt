package org.solyton.solawi.bid.application.data.db.migrations

import org.evoleq.exposedx.migrations.Migration
import org.evoleq.ktorx.Context
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.Transaction
import org.jetbrains.exposed.sql.and
import org.jetbrains.exposed.sql.insert
import org.solyton.solawi.bid.module.permission.schema.ContextEntity
import org.solyton.solawi.bid.module.permission.schema.ContextsTable
import org.solyton.solawi.bid.module.permission.schema.RightEntity
import org.solyton.solawi.bid.module.permission.schema.RightsTable
import org.solyton.solawi.bid.module.permission.schema.RoleEntity
import org.solyton.solawi.bid.module.permission.schema.RoleRightContexts
import org.solyton.solawi.bid.module.permission.schema.RolesTable

/**
 * Autogenerated [Migration],
 * generated by the evoleq/exposedx migration gradle-plugin.
 * Alter with care!
 *
 * Generated at Tue Aug 26 09:48:29 CEST 2025
 *
 * Description:
 * Add right READ_ROLE_RIGHT_CONTEXTS to role USER in context APPLICATION
 */
class Migration1756194509999(
    override val database: Database
) : Migration {

    /**
     * Id of the migration, do not change!
     */
    override val id: Long
        get() = 1756194509999

    /**
     * Upwards migration
     */
    override suspend fun Transaction.up() {
        val role = RoleEntity.find {
            RolesTable.name eq "USER"
        }.first()

        val right = RightEntity.find {
            RightsTable.name eq "READ_ROLE_RIGHT_CONTEXTS"
        }.first()

        val context = ContextEntity.find {
            ContextsTable.name eq "APPLICATION" and (ContextsTable.rootId eq null)
        }.first()

        RoleRightContexts.insert {
            it[roleId] = role.id
            it[rightId] = right.id
            it[contextId] = context.id
        }
    }

    /**
     * Downwards migration (inverse to the upward migration).
     */
    override suspend fun Database.down() {
        TODO("Not yet implemented")
    }
}

<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>EmptyFunctionBlock:parser.kt$ParserTest${ }</ID>
    <ID>FunctionNaming:language-reader.kt$fun Texts(path: String): Reader&lt;Lang.Block, Lang.Block&gt;</ID>
    <ID>FunctionNaming:serializers.kt$fun &lt;T : Any&gt; Serializer(t: T): KSerializer&lt;T&gt;</ID>
    <ID>NestedBlockDepth:language.kt$@I18N fun Block.component(path: String): Block</ID>
    <ID>NestedBlockDepth:language.kt$@I18N operator fun Lang.get(path: String): String</ID>
    <ID>NewLineAtEndOfFile:actions-test.kt$org.evoleq.optics.storage.actions-test.kt</ID>
    <ID>NewLineAtEndOfFile:bid-round-evaluation.kt$org.solyton.solawi.bid.module.bid.data.api.bid-round-evaluation.kt</ID>
    <ID>NewLineAtEndOfFile:boolean-algebra.kt$org.evoleq.optics.lens.boolean-algebra.kt</ID>
    <ID>NewLineAtEndOfFile:contexts.kt$org.solyton.solawi.bid.application.permission.contexts.kt</ID>
    <ID>NewLineAtEndOfFile:csv-parser-test.kt$org.evoleq.csv.csv-parser-test.kt</ID>
    <ID>NewLineAtEndOfFile:csv-parser.kt$org.evoleq.csv.csv-parser.kt</ID>
    <ID>NewLineAtEndOfFile:data.kt$org.evoleq.optics.data.kt</ID>
    <ID>NewLineAtEndOfFile:data.kt$org.solyton.solawi.bid.module.authentication.data.api.data.kt</ID>
    <ID>NewLineAtEndOfFile:data.kt$org.solyton.solawi.bid.module.user.data.api.data.kt</ID>
    <ID>NewLineAtEndOfFile:dsl-marker.kt$org.evoleq.language.dsl-marker.kt</ID>
    <ID>NewLineAtEndOfFile:dsl-marker.kt$org.evoleq.math.dsl-marker.kt</ID>
    <ID>NewLineAtEndOfFile:exception.kt$org.solyton.solawi.bid.module.authentication.exception.exception.kt</ID>
    <ID>NewLineAtEndOfFile:exception.kt$org.solyton.solawi.bid.module.bid.data.api.exception.kt</ID>
    <ID>NewLineAtEndOfFile:exception.kt$org.solyton.solawi.bid.module.bid.data.validation.exception.kt</ID>
    <ID>NewLineAtEndOfFile:exception.kt$org.solyton.solawi.bid.module.permission.exception.kt</ID>
    <ID>NewLineAtEndOfFile:exception.kt$org.solyton.solawi.bid.module.user.exception.exception.kt</ID>
    <ID>NewLineAtEndOfFile:function.kt$org.evoleq.math.function.kt</ID>
    <ID>NewLineAtEndOfFile:headers.kt$org.solyton.solawi.bid.application.permission.headers.kt</ID>
    <ID>NewLineAtEndOfFile:is-double-test.kt$org.evoleq.math.is-double-test.kt</ID>
    <ID>NewLineAtEndOfFile:is-double.kt$org.evoleq.math.is-double.kt</ID>
    <ID>NewLineAtEndOfFile:iso.kt$org.evoleq.optics.iso.iso.kt</ID>
    <ID>NewLineAtEndOfFile:lang-default-readers.kt$org.evoleq.language.lang-default-readers.kt</ID>
    <ID>NewLineAtEndOfFile:language-dsl-test.kt$org.evoleq.language.language-dsl-test.kt</ID>
    <ID>NewLineAtEndOfFile:language-dsl.kt$org.evoleq.language.language-dsl.kt</ID>
    <ID>NewLineAtEndOfFile:language-merge.kt$org.evoleq.language.language-merge.kt</ID>
    <ID>NewLineAtEndOfFile:language-reader.kt$org.evoleq.language.language-reader.kt</ID>
    <ID>NewLineAtEndOfFile:language-test.kt$org.evoleq.language.language-test.kt</ID>
    <ID>NewLineAtEndOfFile:lens-iso.kt$org.evoleq.optics.transform.lens-iso.kt</ID>
    <ID>NewLineAtEndOfFile:lens-reader.kt$org.evoleq.optics.transform.lens-reader.kt</ID>
    <ID>NewLineAtEndOfFile:lens.kt$org.evoleq.optics.lens.lens.kt</ID>
    <ID>NewLineAtEndOfFile:list.kt$org.evoleq.optics.lens.list.kt</ID>
    <ID>NewLineAtEndOfFile:locale.kt$org.evoleq.language.locale.kt</ID>
    <ID>NewLineAtEndOfFile:math-test.kt$org.evoleq.language.math-test.kt</ID>
    <ID>NewLineAtEndOfFile:math.kt$org.evoleq.language.math.kt</ID>
    <ID>NewLineAtEndOfFile:pair.kt$org.evoleq.optics.lens.pair.kt</ID>
    <ID>NewLineAtEndOfFile:parser.kt$org.evoleq.language.parser.kt</ID>
    <ID>NewLineAtEndOfFile:parser.kt$org.evoleq.parser.parser.kt</ID>
    <ID>NewLineAtEndOfFile:prism.kt$org.evoleq.optics.prism.prism.kt</ID>
    <ID>NewLineAtEndOfFile:product.kt$org.evoleq.math.product.kt</ID>
    <ID>NewLineAtEndOfFile:pseudo-lens.kt$org.evoleq.math.pseudo-lens.kt</ID>
    <ID>NewLineAtEndOfFile:request.kt$org.evoleq.ktorx.client.request.kt</ID>
    <ID>NewLineAtEndOfFile:round-state.kt$org.solyton.solawi.bid.module.bid.data.api.round-state.kt</ID>
    <ID>NewLineAtEndOfFile:search-bidder-data.kt$org.solyton.solawi.bid.module.bid.data.api.search-bidder-data.kt</ID>
    <ID>NewLineAtEndOfFile:serializer-tests.kt$org.solyton.bid.module.bid.data.api.serializer-tests.kt</ID>
    <ID>NewLineAtEndOfFile:serializers-test.kt$org.evoleq.ktorx.result.serializers-test.kt</ID>
    <ID>NewLineAtEndOfFile:serializers.kt$org.evoleq.ktorx.result.serializers.kt</ID>
    <ID>NewLineAtEndOfFile:sg-pair.kt$org.evoleq.optics.sg.sg-pair.kt</ID>
    <ID>NewLineAtEndOfFile:special-parsers.kt$org.evoleq.parser.special-parsers.kt</ID>
    <ID>NewLineAtEndOfFile:state.kt$org.evoleq.math.state.state.kt</ID>
    <ID>NewLineAtEndOfFile:storage-lens.kt$org.evoleq.optics.transform.storage-lens.kt</ID>
    <ID>NewLineAtEndOfFile:storage-prism.kt$org.evoleq.optics.transform.storage-prism.kt</ID>
    <ID>NewLineAtEndOfFile:storage-reader.kt$org.evoleq.optics.transform.storage-reader.kt</ID>
    <ID>NewLineAtEndOfFile:storage-writer.kt$org.evoleq.optics.transform.storage-writer.kt</ID>
    <ID>NewLineAtEndOfFile:storage.kt$org.evoleq.optics.storage.storage.kt</ID>
    <ID>NewLineAtEndOfFile:test-dsl.kt$org.evoleq.test.test-dsl.kt</ID>
    <ID>NewLineAtEndOfFile:transform.kt$org.solyton.solawil.bid.module.bid.data.api.transform.kt</ID>
    <ID>NewLineAtEndOfFile:uuid.kt$org.evoleq.uuid.uuid.kt</ID>
    <ID>NewLineAtEndOfFile:value-with-description.kt$org.solyton.solawi.bid.shared.value-with-description.kt</ID>
    <ID>ReturnCount:is-double.kt$fun String.isDouble(precision: Int = 2, dotHit: Boolean = false): Boolean</ID>
    <ID>TooGenericExceptionThrown:language-merge.kt$throw Exception("Cannot merge blocks")</ID>
    <ID>TooGenericExceptionThrown:language-merge.kt$throw Exception("Cannot merge langs")</ID>
    <ID>TooGenericExceptionThrown:language.kt$throw Exception("There is no Element in block '${this@get.key}' with key = '$result'")</ID>
    <ID>TooGenericExceptionThrown:language.kt$throw Exception("There is no block in block '${this@component.key}' with key = '$result'")</ID>
    <ID>TooGenericExceptionThrown:round-state.kt$RoundState.Companion$throw Exception("No such RoundState")</ID>
    <ID>TooManyFunctions:api.kt$Api : Map</ID>
    <ID>UnusedPrivateProperty:language-test.kt$LanguageTest$val r = lang.merge(l)</ID>
    <ID>UnusedPrivateProperty:parser.kt$ParserTest$val TillLeftOrRight = CollectWhile { it != left &amp;&amp; it != right}</ID>
    <ID>UnusedPrivateProperty:parser.kt$ParserTest$val c1 = "{ how {do {you{ feel } }} }---{}"</ID>
    <ID>UnusedPrivateProperty:storage.kt$StorageTest$val unit: Unit = dispatcher dispatch newName</ID>
    <ID>UtilityClassWithPublicConstructor:storage.kt$Read</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val IsLeft = When{it == left}</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val Left = White dL (FirstMatches(left) map {"$it"}) dR White</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val Right = White dL FirstMatches(right) map {"$it"} dR White</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val TillLeft = CollectWhile { it != left }</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val TillLeftOrRight = CollectWhile { it != left &amp;&amp; it != right}</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val TillRight = CollectWhile { it != right }</ID>
    <ID>VariableNaming:parser.kt$ParserTest$val White = DropAllWhitespace()</ID>
    <ID>VariableNaming:storage.kt$StorageTest$val X = Read from storage</ID>
  </CurrentIssues>
</SmellBaseline>

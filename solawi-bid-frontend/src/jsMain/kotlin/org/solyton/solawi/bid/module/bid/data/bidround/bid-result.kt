// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.bid.data.bidround

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadOnly
import org.evoleq.optics.lens.Lens

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class BidResult(
    @ReadOnly val resultingUsername: String,
    @ReadOnly val resultingNumberOfShares: Int,
    @ReadOnly val resultingBidAmount: Double,
    @ReadOnly val resultingHasPlacedBid: Boolean
)

/**
 * Autogenerated ReadOnly Lens.
 * Read [BidResult.resultingUsername]
 */
@ReadOnly val resultingUsername: Lens<BidResult, String> by lazy{ Lens(
    get = {whole -> whole.resultingUsername},
    set = {{it}}
) }
/**
 * Autogenerated ReadOnly Lens.
 * Read [BidResult.resultingNumberOfShares]
 */
@ReadOnly val resultingNumberOfShares: Lens<BidResult, Int> by lazy{ Lens(
    get = {whole -> whole.resultingNumberOfShares},
    set = {{it}}
) }
/**
 * Autogenerated ReadOnly Lens.
 * Read [BidResult.resultingBidAmount]
 */
@ReadOnly val resultingBidAmount: Lens<BidResult, Double> by lazy{ Lens(
    get = {whole -> whole.resultingBidAmount},
    set = {{it}}
) }
/**
 * Autogenerated ReadOnly Lens.
 * Read [BidResult.resultingHasPlacedBid]
 */
@ReadOnly val resultingHasPlacedBid: Lens<BidResult, Boolean> by lazy{ Lens(
    get = {whole -> whole.resultingHasPlacedBid},
    set = {{it}}
) }

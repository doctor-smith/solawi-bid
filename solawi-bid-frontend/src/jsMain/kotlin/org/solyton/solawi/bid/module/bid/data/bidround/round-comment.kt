// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.bid.data.bidround

import kotlinx.datetime.LocalDate
import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadOnly
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class RoundComment(
    @ReadOnly val roundCommentId: String,
    @ReadWrite val comment: String,
    @ReadOnly val creatorId: String,
    @ReadOnly val createdAt: LocalDate
)

/**
 * Autogenerated ReadOnly Lens.
 * Read [RoundComment.roundCommentId]
 */
@ReadOnly val roundCommentId: Lens<RoundComment, String> by lazy{ Lens(
    get = {whole -> whole.roundCommentId},
    set = {{it}}
) }
/**
 * Autogenerated Lens.
 * Read and manipulate [RoundComment.comment]
 */
@ReadWrite val comment: Lens<RoundComment, String> by lazy{ Lens(
    get = {whole -> whole.comment},
    set = {part -> {whole -> whole.copy(comment = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [RoundComment.comment]
 */
@ReadWrite fun RoundComment.comment(set: String.()->String ): RoundComment = copy(comment = set(comment)) 
/**
 * Autogenerated ReadOnly Lens.
 * Read [RoundComment.creatorId]
 */
@ReadOnly val creatorId: Lens<RoundComment, String> by lazy{ Lens(
    get = {whole -> whole.creatorId},
    set = {{it}}
) }
/**
 * Autogenerated ReadOnly Lens.
 * Read [RoundComment.createdAt]
 */
@ReadOnly val createdAt: Lens<RoundComment, LocalDate> by lazy{ Lens(
    get = {whole -> whole.createdAt},
    set = {{it}}
) }

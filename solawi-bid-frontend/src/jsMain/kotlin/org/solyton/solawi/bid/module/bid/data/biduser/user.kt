// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.bid.data.biduser

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadOnly
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens
import org.solyton.solawi.bid.module.permissions.data.Permissions

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class User(
    @ReadWrite val username: String = "",
    @ReadOnly val permissions: Permissions = Permissions()
)

/**
 * Autogenerated Lens.
 * Read and manipulate [User.username]
 */
@ReadWrite val username: Lens<User, String> by lazy{ Lens(
    get = {whole -> whole.username},
    set = {part -> {whole -> whole.copy(username = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [User.username]
 */
@ReadWrite fun User.username(set: String.()->String ): User = copy(username = set(username)) 
/**
 * Autogenerated ReadOnly Lens.
 * Read [User.permissions]
 */
@ReadOnly val permissions: Lens<User, Permissions> by lazy{ Lens(
    get = {whole -> whole.permissions},
    set = {{it}}
) }

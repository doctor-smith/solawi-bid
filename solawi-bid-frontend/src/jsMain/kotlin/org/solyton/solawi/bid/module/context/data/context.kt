// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.context.data

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens
import org.solyton.solawi.bid.module.application.permission.Context as C

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class Context(
    @ReadWrite val current: String = C.Empty.value,
    @ReadWrite val next: String? = null
)

/**
 * Autogenerated Lens.
 * Read and manipulate [Context.current]
 */
@ReadWrite val current: Lens<Context, String> by lazy{ Lens(
    get = {whole -> whole.current},
    set = {part -> {whole -> whole.copy(current = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [Context.current]
 */
@ReadWrite fun Context.current(set: String.()->String ): Context = copy(current = set(current)) 
/**
 * Autogenerated Lens.
 * Read and manipulate [Context.next]
 */
@ReadWrite val next: Lens<Context, String?> by lazy{ Lens(
    get = {whole -> whole.next},
    set = {part -> {whole -> whole.copy(next = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [Context.next]
 */
@ReadWrite fun Context.next(set: String?.()->String? ): Context = copy(next = set(next)) 

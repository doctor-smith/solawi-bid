// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.user.data.member

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadOnly
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens
import org.solyton.solawi.bid.module.permissions.data.Role

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class Member(
    @ReadOnly val memberId: String,
    @ReadWrite val roles: List<Role>
)

/**
 * Autogenerated ReadOnly Lens.
 * Read [Member.memberId]
 */
@ReadOnly val memberId: Lens<Member, String> by lazy{ Lens(
    get = {whole -> whole.memberId},
    set = {{it}}
) }
/**
 * Autogenerated Lens.
 * Read and manipulate [Member.roles]
 */
@ReadWrite val roles: Lens<Member, List<Role>> by lazy{ Lens(
    get = {whole -> whole.roles},
    set = {part -> {whole -> whole.copy(roles = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [Member.roles]
 */
@ReadWrite fun Member.roles(set: List<Role>.()->List<Role> ): Member = copy(roles = set(roles)) 
